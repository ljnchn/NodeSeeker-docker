# 生产环境 Docker Compose 配置
version: '3.8'

services:
  nodeseeker:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: nodeseeker-app-prod
    restart: unless-stopped
    ports:
      - "3010:3010"
    environment:
      - NODE_ENV=production
      - PORT=3010
      - HOST=0.0.0.0
      - DATABASE_PATH=/usr/src/app/data/nodeseeker.db
      - RSS_URL=${RSS_URL:-https://rss.nodeseek.com/}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_WEBHOOK_URL=${TELEGRAM_WEBHOOK_URL}
      - CORS_ORIGINS=${CORS_ORIGINS:-https://your-domain.com}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - nodeseeker_data:/usr/src/app/data
      - nodeseeker_logs:/usr/src/app/logs
    networks:
      - nodeseeker_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3010/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'

  # 自动更新服务（可选）
  watchtower:
    image: containrrr/watchtower
    container_name: nodeseeker-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600  # 每小时检查一次
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${WATCHTOWER_EMAIL_FROM}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_EMAIL_TO}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${WATCHTOWER_EMAIL_SERVER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${WATCHTOWER_EMAIL_PORT:-587}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${WATCHTOWER_EMAIL_USER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${WATCHTOWER_EMAIL_PASSWORD}
    command: nodeseeker-app-prod
    networks:
      - nodeseeker_network

  # 可选：添加监控服务
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: nodeseeker-prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus_data:/prometheus
  #   networks:
  #     - nodeseeker_network

volumes:
  nodeseeker_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/nodeseeker/data  # 生产环境数据目录
  nodeseeker_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/nodeseeker/logs  # 生产环境日志目录
  # prometheus_data:
  #   driver: local

networks:
  nodeseeker_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16