# 生产环境 Docker Compose 配置
version: '3.8'

services:
  nodeseeker:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: nodeseeker-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
      - DATABASE_PATH=/app/data/nodeseeker.db
      - JWT_SECRET=${JWT_SECRET}
      - RSS_URL=${RSS_URL:-https://rss.nodeseek.com/}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_WEBHOOK_URL=${TELEGRAM_WEBHOOK_URL}
    volumes:
      - nodeseeker_data:/usr/src/app/data
      - ./logs:/usr/src/app/logs
    networks:
      - nodeseeker_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:alpine
    container_name: nodeseeker-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      nodeseeker:
        condition: service_healthy
    networks:
      - nodeseeker_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 可选：添加监控服务
  watchtower:
    image: containrrr/watchtower
    container_name: nodeseeker-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
      - WATCHTOWER_INCLUDE_STOPPED=true
    command: nodeseeker-app
    networks:
      - nodeseeker_network

volumes:
  nodeseeker_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/nodeseeker/data

networks:
  nodeseeker_network:
    driver: bridge